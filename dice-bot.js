const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config({ path: './config.env' });

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏
const diceStats = new Map();
const globalStats = {
    totalRolls: 0,
    totalScore: 0,
    averageScore: 0,
    bestRoll: 0,
    worstRoll: 6
};

// –≠–º–æ–¥–∑–∏ –¥–ª—è –∫—É–±–∏–∫–æ–≤ (1-6)
const diceEmojis = {
    1: '‚öÄ',
    2: '‚öÅ',
    3: '‚öÇ',
    4: '‚öÉ',
    5: '‚öÑ',
    6: '‚öÖ'
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || msg.from.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!diceStats.has(userId)) {
        diceStats.set(userId, {
            username: username,
            totalRolls: 0,
            totalScore: 0,
            averageScore: 0,
            bestRoll: 0,
            worstRoll: 6,
            rollsHistory: [],
            firstRoll: null,
            lastRoll: null
        });
    }

    const welcomeMessage = `
üé≤ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É "–ö–æ—Å—Ç–∏"!

–Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ —ç–º–æ–¥–∑–∏ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π.

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
/dice - –ë—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏ (1 –∫—É–±–∏–∫)
/dice2 - –ë—Ä–æ—Å–∏—Ç—å 2 –∫—É–±–∏–∫–∞
/dice3 - –ë—Ä–æ—Å–∏—Ç—å 3 –∫—É–±–∏–∫–∞
/stats - –í–∞—à–∞ –ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/global - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
/leaderboard - –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤

üéØ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /dice —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å!
  `;

    bot.sendMessage(chatId, welcomeMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    const helpMessage = `
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏–≥—Ä–µ "–ö–æ—Å—Ç–∏":

üé≤ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–≥—Ä—ã:
/dice - –ë—Ä–æ—Å–∏—Ç—å 1 –∫—É–±–∏–∫ (1-6)
/dice2 - –ë—Ä–æ—Å–∏—Ç—å 2 –∫—É–±–∏–∫–∞ (2-12)
/dice3 - –ë—Ä–æ—Å–∏—Ç—å 3 –∫—É–±–∏–∫–∞ (3-18)

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
/stats - –í–∞—à–∞ –ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/global - –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
/leaderboard - –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤

üí° –ö–∞–∂–¥—ã–π –±—Ä–æ—Å–æ–∫ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!
  `;

    bot.sendMessage(chatId, helpMessage);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–æ–≤
function rollDice(count = 1) {
    const rolls = [];
    let total = 0;

    for (let i = 0; i < count; i++) {
        const roll = Math.floor(Math.random() * 6) + 1;
        rolls.push(roll);
        total += roll;
    }

    return { rolls, total };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats(userId, rolls, total) {
    const user = diceStats.get(userId);
    if (!user) return;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user.totalRolls++;
    user.totalScore += total;
    user.averageScore = Math.round((user.totalScore / user.totalRolls) * 100) / 100;
    user.rollsHistory.push({ rolls, total, timestamp: new Date() });
    user.lastRoll = new Date();

    if (!user.firstRoll) {
        user.firstRoll = new Date();
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ª—É—á—à–∏–π –∏ —Ö—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (total > user.bestRoll) user.bestRoll = total;
    if (total < user.worstRoll) user.worstRoll = total;

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 50 –±—Ä–æ—Å–∫–∞–º–∏
    if (user.rollsHistory.length > 50) {
        user.rollsHistory = user.rollsHistory.slice(-50);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    globalStats.totalRolls++;
    globalStats.totalScore += total;
    globalStats.averageScore = Math.round((globalStats.totalScore / globalStats.totalRolls) * 100) / 100;
    if (total > globalStats.bestRoll) globalStats.bestRoll = total;
    if (total < globalStats.worstRoll) globalStats.worstRoll = total;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /dice (1 –∫—É–±–∏–∫)
bot.onText(/\/dice/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || msg.from.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if (!diceStats.has(userId)) {
        diceStats.set(userId, {
            username: username,
            totalRolls: 0,
            totalScore: 0,
            averageScore: 0,
            bestRoll: 0,
            worstRoll: 6,
            rollsHistory: [],
            firstRoll: null,
            lastRoll: null
        });
    }

    const { rolls, total } = rollDice(1);
    updateStats(userId, rolls, total);

    const diceMessage = `
üé≤ –ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞ –¥–ª—è ${username}:

${diceEmojis[rolls[0]]} –†–µ–∑—É–ª—å—Ç–∞—Ç: ${rolls[0]}

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üéØ –í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤: ${diceStats.get(userId).totalRolls}
‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).averageScore}
üèÜ –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).bestRoll}
üìâ –•—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).worstRoll}
  `;

    bot.sendMessage(chatId, diceMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /dice2 (2 –∫—É–±–∏–∫–∞)
bot.onText(/\/dice2/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || msg.from.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    if (!diceStats.has(userId)) {
        diceStats.set(userId, {
            username: username,
            totalRolls: 0,
            totalScore: 0,
            averageScore: 0,
            bestRoll: 0,
            worstRoll: 6,
            rollsHistory: [],
            firstRoll: null,
            lastRoll: null
        });
    }

    const { rolls, total } = rollDice(2);
    updateStats(userId, rolls, total);

    const diceMessage = `
üé≤ –ë—Ä–æ—Å–æ–∫ 2 –∫—É–±–∏–∫–æ–≤ –¥–ª—è ${username}:

${diceEmojis[rolls[0]]} + ${diceEmojis[rolls[1]]} = ${total}

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üéØ –í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤: ${diceStats.get(userId).totalRolls}
‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).averageScore}
üèÜ –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).bestRoll}
üìâ –•—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).worstRoll}
  `;

    bot.sendMessage(chatId, diceMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /dice3 (3 –∫—É–±–∏–∫–∞)
bot.onText(/\/dice3/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || msg.from.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    if (!diceStats.has(userId)) {
        diceStats.set(userId, {
            username: username,
            totalRolls: 0,
            totalScore: 0,
            averageScore: 0,
            bestRoll: 0,
            worstRoll: 6,
            rollsHistory: [],
            firstRoll: null,
            lastRoll: null
        });
    }

    const { rolls, total } = rollDice(3);
    updateStats(userId, rolls, total);

    const diceMessage = `
üé≤ –ë—Ä–æ—Å–æ–∫ 3 –∫—É–±–∏–∫–æ–≤ –¥–ª—è ${username}:

${diceEmojis[rolls[0]]} + ${diceEmojis[rolls[1]]} + ${diceEmojis[rolls[2]]} = ${total}

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üéØ –í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤: ${diceStats.get(userId).totalRolls}
‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).averageScore}
üèÜ –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).bestRoll}
üìâ –•—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${diceStats.get(userId).worstRoll}
  `;

    bot.sendMessage(chatId, diceMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats (–ª–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
bot.onText(/\/stats/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (!diceStats.has(userId)) {
        bot.sendMessage(chatId, '‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –°—ã–≥—Ä–∞–π—Ç–µ —Ö–æ—Ç—è –±—ã —Ä–∞–∑ –∫–æ–º–∞–Ω–¥–æ–π /dice!');
        return;
    }

    const stats = diceStats.get(userId);
    const now = new Date();
    const timeDiff = stats.firstRoll ? Math.floor((now - stats.firstRoll) / (1000 * 60 * 60 * 24)) : 0;

    // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –±—Ä–æ—Å–∫–æ–≤
    const recentRolls = stats.rollsHistory.slice(-5).reverse();
    let recentRollsText = '';
    if (recentRolls.length > 0) {
        recentRollsText = recentRolls.map(roll =>
            `${roll.rolls.map(r => diceEmojis[r]).join(' + ')} = ${roll.total}`
        ).join('\n');
    }

    const statsMessage = `
üìä –õ–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ ${stats.username}:

üéØ –í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤: ${stats.totalRolls}
‚≠ê –û–±—â–∏–π —Å—á–µ—Ç: ${stats.totalScore}
üìà –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${stats.averageScore}
üèÜ –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${stats.bestRoll}
üìâ –•—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${stats.worstRoll}
üìÖ –î–Ω–µ–π –≤ –∏–≥—Ä–µ: ${timeDiff}
üïê –ü–µ—Ä–≤—ã–π –±—Ä–æ—Å–æ–∫: ${stats.firstRoll ? stats.firstRoll.toLocaleDateString('ru-RU') : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}
‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–π –±—Ä–æ—Å–æ–∫: ${stats.lastRoll ? stats.lastRoll.toLocaleString('ru-RU') : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}

üé≤ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –±—Ä–æ—Å–∫–æ–≤:
${recentRollsText || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}
  `;

    bot.sendMessage(chatId, statsMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /global (–æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
bot.onText(/\/global/, (msg) => {
    const chatId = msg.chat.id;

    const globalMessage = `
üåç –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤:

üéØ –í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤: ${globalStats.totalRolls}
‚≠ê –û–±—â–∏–π —Å—á–µ—Ç: ${globalStats.totalScore}
üìà –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${globalStats.averageScore}
üèÜ –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${globalStats.bestRoll}
üìâ –•—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${globalStats.worstRoll}
üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: ${diceStats.size}
  `;

    bot.sendMessage(chatId, globalMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /leaderboard (—Ç–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤)
bot.onText(/\/leaderboard/, (msg) => {
    const chatId = msg.chat.id;

    if (diceStats.size === 0) {
        bot.sendMessage(chatId, '‚ùå –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤. –°—ã–≥—Ä–∞–π—Ç–µ —Ö–æ—Ç—è –±—ã —Ä–∞–∑!');
        return;
    }

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±—Ä–æ—Å–∫–æ–≤
    const sortedPlayers = Array.from(diceStats.values())
        .sort((a, b) => b.totalRolls - a.totalRolls)
        .slice(0, 10); // –¢–æ–ø-10

    let leaderboardText = 'üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –±—Ä–æ—Å–∫–æ–≤):\n\n';

    sortedPlayers.forEach((player, index) => {
        const medal = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : 'üèÖ';
        leaderboardText += `${medal} ${index + 1}. ${player.username}\n`;
        leaderboardText += `   üéØ –ë—Ä–æ—Å–∫–æ–≤: ${player.totalRolls} | ‚≠ê –°—Ä–µ–¥–Ω–µ–µ: ${player.averageScore} | üèÜ –õ—É—á—à–∏–π: ${player.bestRoll}\n\n`;
    });

    bot.sendMessage(chatId, leaderboardText);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
    const chatId = msg.chat.id;

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    if (msg.text && msg.text.startsWith('/')) {
        return;
    }

    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (msg.text) {
        const responses = [
            'üé≤ –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /dice!',
            'üéØ –ì–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ! –ö–æ–º–∞–Ω–¥–∞ /dice –¥–ª—è –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞.',
            'üé≤ –î–∞–≤–∞–π—Ç–µ —Å—ã–≥—Ä–∞–µ–º! /dice - –æ–¥–∏–Ω –∫—É–±–∏–∫, /dice2 - –¥–≤–∞ –∫—É–±–∏–∫–∞.',
            'üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stats —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!',
            'üé≤ –ö–æ–º–∞–Ω–¥–∞ /leaderboard –ø–æ–∫–∞–∂–µ—Ç –ª—É—á—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤!',
            'üéØ /help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º –∏–≥—Ä—ã.'
        ];

        const randomResponse = responses[Math.floor(Math.random() * responses.length)];
        bot.sendMessage(chatId, randomResponse);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});

bot.on('error', (error) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
process.on('SIGINT', () => {
    console.log('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –¥–ª—è –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏...');
    bot.stopPolling();
    process.exit(0);
});

console.log('üé≤ Telegram –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏ –∑–∞–ø—É—â–µ–Ω!');
console.log('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.');
console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ –∞–∫—Ç–∏–≤–Ω–∞');
console.log('üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /dice, /dice2, /dice3, /stats, /global, /leaderboard');

