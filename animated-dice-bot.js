const TelegramBot = require('node-telegram-bot-api');
require('dotenv').config({ path: './config.env' });

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–Ω—é Telegram
bot.setMyCommands([
    { command: 'start', description: 'üé≤ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ –∫–æ—Å—Ç–∏' },
    { command: 'dice', description: 'üéØ –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ (1-6)' },
    { command: 'roll', description: '‚ö° –ë—ã—Å—Ç—Ä—ã–π –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞' },
    { command: 'daily', description: 'üìÖ –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è' },
    { command: 'stats', description: 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ —á–∞—Ç–µ' },
    { command: 'commands', description: '‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã' },
    { command: 'help', description: '‚ùì –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏–≥—Ä–µ' }
]);

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏
// –°—Ç—Ä—É–∫—Ç—É—Ä–∞: Map<chatId, Map<userId, userStats>>
const chatStats = new Map();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —á–∞—Ç–∞
function getChatStats(chatId) {
    if (!chatStats.has(chatId)) {
        chatStats.set(chatId, {
            users: new Map(),
            global: {
                totalRolls: 0,
                totalScore: 0,
                averageScore: 0,
                bestRoll: 0,
                worstRoll: 6
            }
        });
    }
    return chatStats.get(chatId);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ
function getUserStats(chatId, userId) {
    const chat = getChatStats(chatId);
    if (!chat.users.has(userId)) {
        return null;
    }
    return chat.users.get(userId);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–∞ –±—Ä–æ—Å–∫–æ–≤ –≤ —Å—É—Ç–∫–∏
function checkDailyLimit(chatId, userId) {
    const user = getUserStats(chatId, userId);
    if (!user) return { canRoll: true, remaining: 3 };

    const now = new Date();
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());

    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –¥–µ–Ω—å, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    if (!user.lastRollDate || user.lastRollDate < today) {
        user.dailyRolls = 0;
        user.lastRollDate = today;
    }

    const remaining = 3 - user.dailyRolls;
    return { canRoll: remaining > 0, remaining: Math.max(0, remaining) };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ –±—Ä–æ—Å–∫–æ–≤ –≤ —Å—É—Ç–∫–∏
function incrementDailyRolls(chatId, userId) {
    const user = getUserStats(chatId, userId);
    if (!user) return;

    const now = new Date();
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());

    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –¥–µ–Ω—å, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
    if (!user.lastRollDate || user.lastRollDate < today) {
        user.dailyRolls = 0;
        user.lastRollDate = today;
    }

    user.dailyRolls++;
}

// –≠–º–æ–¥–∑–∏ –¥–ª—è –∫—É–±–∏–∫–æ–≤ (1-6)
const diceEmojis = {
    1: '‚öÄ',
    2: '‚öÅ',
    3: '‚öÇ',
    4: '‚öÉ',
    5: '‚öÑ',
    6: '‚öÖ'
};

// –≠–º–æ–¥–∑–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫—Ä—É—á–µ–Ω–∏—è
const spinningEmojis = ['üé≤', 'üéØ', 'üé™', 'üé®', 'üé≠', 'üé™', 'üé≤'];

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –±–µ–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
const alternativeSpinningEmojis = ['üé≤', 'üéØ', 'üé™', 'üé®', 'üé≠', 'üé™', 'üé≤', 'üé™', 'üé®', 'üé≠'];

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || msg.from.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const chat = getChatStats(chatId);
    if (!chat.users.has(userId)) {
        chat.users.set(userId, {
            username: username,
            totalRolls: 0,
            totalScore: 0,
            averageScore: 0,
            bestRoll: 0,
            worstRoll: 6,
            rollsHistory: [],
            firstRoll: null,
            lastRoll: null,
            dailyRolls: 0,
            lastRollDate: null
        });
    }

    const welcomeMessage = `
üé≤ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É "–ö–æ—Å—Ç–∏"!

–Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.

üéØ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /dice —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å!
üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /commands –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥

üìÖ **–õ–∏–º–∏—Ç:** 3 –±—Ä–æ—Å–∫–∞ –≤ —Å—É—Ç–∫–∏ –Ω–∞ –∏–≥—Ä–æ–∫–∞
üîÑ **–°–±—Ä–æ—Å:** –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00
  `;

    bot.sendMessage(chatId, welcomeMessage);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    const helpMessage = `
üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏–≥—Ä–µ "–ö–æ—Å—Ç–∏":

üé≤ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–≥—Ä—ã:
/dice - –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ (1-6)
/roll - –ë—ã—Å—Ç—Ä—ã–π –±—Ä–æ—Å–æ–∫
/daily - –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ —á–∞—Ç–µ

üí° –ö–∞–∂–¥—ã–π –±—Ä–æ—Å–æ–∫ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!
üé™ –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–µ–ª–∞—é—Ç –∏–≥—Ä—É –±–æ–ª–µ–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–π!

üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /commands –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
  `;

    bot.sendMessage(chatId, helpMessage);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–æ–≤
function rollDice(count = 1) {
    const rolls = [];
    let total = 0;

    for (let i = 0; i < count; i++) {
        // –ù–∞—Å—Ç–æ—è—â–∏–π —Å–ª—É—á–∞–π–Ω—ã–π –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞ (1-6)
        const roll = Math.floor(Math.random() * 6) + 1;
        rolls.push(roll);
        total += roll;
    }

    return { rolls, total };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats(chatId, userId, rolls, total) {
    const chat = getChatStats(chatId);
    let user = chat.users.get(userId);

    if (!user) return;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user.totalRolls++;
    user.totalScore += total;
    user.averageScore = Math.round((user.totalScore / user.totalRolls) * 100) / 100;
    user.rollsHistory.push({ rolls, total, timestamp: new Date() });
    user.lastRoll = new Date();

    if (!user.firstRoll) {
        user.firstRoll = new Date();
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ª—É—á—à–∏–π –∏ —Ö—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (total > user.bestRoll) user.bestRoll = total;
    if (total < user.worstRoll) user.worstRoll = total;

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ 50 –±—Ä–æ—Å–∫–∞–º–∏
    if (user.rollsHistory.length > 50) {
        user.rollsHistory = user.rollsHistory.slice(-50);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞
    chat.global.totalRolls++;
    chat.global.totalScore += total;
    chat.global.averageScore = Math.round((chat.global.totalScore / chat.global.totalRolls) * 100) / 100;
    if (total > chat.global.bestRoll) chat.global.bestRoll = total;
    if (total < chat.global.worstRoll) chat.global.worstRoll = total;

    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –±—Ä–æ—Å–∫–æ–≤ –≤ —Å—É—Ç–∫–∏
    incrementDailyRolls(chatId, userId);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±—Ä–æ—Å–∫–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –∫—Ä—É—á–µ–Ω–∏—è
async function animatedDiceRoll(chatId, userId, count = 1) {
    const user = getUserStats(chatId, userId);
    const username = user?.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç" –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    bot.sendChatAction(chatId, 'typing');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –±—Ä–æ—Å–∫–∞
    const startMessage = await bot.sendMessage(chatId, `üé≤ ${username} –±—Ä–æ—Å–∞–µ—Ç ${count === 1 ? '–∫—É–±–∏–∫' : count + ' –∫—É–±–∏–∫–∞'}...`);

    // –≠—Ñ—Ñ–µ–∫—Ç –∫—Ä—É—á–µ–Ω–∏—è - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–∞–∑–Ω—ã–º–∏ —ç–º–æ–¥–∑–∏
    let lastText = `üé≤ ${username} –±—Ä–æ—Å–∞–µ—Ç ${count === 1 ? '–∫—É–±–∏–∫' : count + ' –∫—É–±–∏–∫–∞'}...`;

    for (let i = 0; i < 3; i++) {
        await new Promise(resolve => setTimeout(resolve, 600)); // –ü–∞—É–∑–∞ 600–º—Å

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ—á–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
        const spinningEmoji = spinningEmojis[Math.floor(Math.random() * spinningEmojis.length)];
        const newText = `${spinningEmoji} –ö—Ä—É—Ç–∏–º –∫—É–±–∏–∫–∏... (${i + 1}/3)`;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
        if (newText !== lastText) {
            try {
                await bot.editMessageText(newText, {
                    chat_id: chatId,
                    message_id: startMessage.message_id
                });
                lastText = newText;
            } catch (error) {
                console.log('–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
                // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            }
        }
    }

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    await new Promise(resolve => setTimeout(resolve, 800));

    // –ë—Ä–æ—Å–∞–µ–º –∫—É–±–∏–∫–∏
    const { rolls, total } = rollDice(count);
    updateStats(chatId, userId, rolls, total);

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    let resultText = '';
    if (count === 1) {
        resultText = `${diceEmojis[rolls[0]]} –†–µ–∑—É–ª—å—Ç–∞—Ç: ${rolls[0]}`;
    } else {
        resultText = rolls.map(r => diceEmojis[r]).join(' + ') + ` = ${total}`;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const finalMessage = `
üé≤ –ë—Ä–æ—Å–æ–∫ ${count === 1 ? '–∫—É–±–∏–∫–∞' : count + ' –∫—É–±–∏–∫–æ–≤'} –¥–ª—è ${username}:

${resultText}

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üéØ –í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤: ${user.totalRolls}
‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${user.averageScore}
üèÜ –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${user.bestRoll}
üìâ –•—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${user.worstRoll}
    `;

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫—Ä—É—á–µ–Ω–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    try {
        await bot.deleteMessage(chatId, startMessage.message_id);
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }

    bot.sendMessage(chatId, finalMessage);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /dice (–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±—Ä–æ—Å–æ–∫ 1 –∫—É–±–∏–∫–∞)
bot.onText(/\/dice/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || msg.from.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    const chat = getChatStats(chatId);
    if (!chat.users.has(userId)) {
        chat.users.set(userId, {
            username: username,
            totalRolls: 0,
            totalScore: 0,
            averageScore: 0,
            bestRoll: 0,
            worstRoll: 6,
            rollsHistory: [],
            firstRoll: null,
            lastRoll: null,
            dailyRolls: 0,
            lastRollDate: null
        });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –±—Ä–æ—Å–∫–æ–≤ –≤ —Å—É—Ç–∫–∏
    const limitCheck = checkDailyLimit(chatId, userId);
    if (!limitCheck.canRoll) {
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        tomorrow.setHours(0, 0, 0, 0);

        const timeUntilTomorrow = tomorrow - new Date();
        const hours = Math.floor(timeUntilTomorrow / (1000 * 60 * 60));
        const minutes = Math.floor((timeUntilTomorrow % (1000 * 60 * 60)) / (1000 * 60));

        bot.sendMessage(chatId, `‚ùå –í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ 3 –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!\n\nüïê –°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤—Ç—Ä–∞ –≤ 00:00\n‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: ${hours}—á ${minutes}–º`);
        return;
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –±—Ä–æ—Å–æ–∫
    await animatedDiceRoll(chatId, userId, 1);
});





// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /roll (–±—ã—Å—Ç—Ä—ã–π –±—Ä–æ—Å–æ–∫ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –∫—Ä—É—á–µ–Ω–∏—è)
bot.onText(/\/roll/, async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || msg.from.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    const chat = getChatStats(chatId);
    if (!chat.users.has(userId)) {
        chat.users.set(userId, {
            username: username,
            totalRolls: 0,
            totalScore: 0,
            averageScore: 0,
            bestRoll: 0,
            worstRoll: 6,
            rollsHistory: [],
            firstRoll: null,
            lastRoll: null,
            dailyRolls: 0,
            lastRollDate: null
        });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –±—Ä–æ—Å–∫–æ–≤ –≤ —Å—É—Ç–∫–∏
    const limitCheck = checkDailyLimit(chatId, userId);
    if (!limitCheck.canRoll) {
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        tomorrow.setHours(0, 0, 0, 0);

        const timeUntilTomorrow = tomorrow - new Date();
        const hours = Math.floor(timeUntilTomorrow / (1000 * 60 * 60));
        const minutes = Math.floor((timeUntilTomorrow % (1000 * 60 * 60)) / (1000 * 60));

        bot.sendMessage(chatId, `‚ùå –í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ 3 –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!\n\nüïê –°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤—Ç—Ä–∞ –≤ 00:00\n‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: ${hours}—á ${minutes}–º`);
        return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç" –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    bot.sendChatAction(chatId, 'typing');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫—Ä—É—á–µ–Ω–∏–∏
    const spinMessage = await bot.sendMessage(chatId, `üé≤ ${username} –∫—Ä—É—Ç–∏—Ç –∫—É–±–∏–∫...`);

    // –≠—Ñ—Ñ–µ–∫—Ç –∫—Ä—É—á–µ–Ω–∏—è
    let lastText = `üé≤ ${username} –∫—Ä—É—Ç–∏—Ç –∫—É–±–∏–∫...`;

    for (let i = 0; i < 5; i++) {
        await new Promise(resolve => setTimeout(resolve, 400));

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ—á–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
        const spinningEmoji = spinningEmojis[Math.floor(Math.random() * spinningEmojis.length)];
        const newText = `${spinningEmoji} –ö—Ä—É—Ç–∏–º... (${i + 1}/5)`;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
        if (newText !== lastText) {
            try {
                await bot.editMessageText(newText, {
                    chat_id: chatId,
                    message_id: spinMessage.message_id
                });
                lastText = newText;
            } catch (error) {
                console.log('–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
                // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            }
        }
    }

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–∞—É–∑–∞
    await new Promise(resolve => setTimeout(resolve, 500));

    // –ë—Ä–æ—Å–∞–µ–º –∫—É–±–∏–∫
    const { rolls, total } = rollDice(1);
    updateStats(chatId, userId, rolls, total);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const resultMessage = `
üé≤ –ë—ã—Å—Ç—Ä—ã–π –±—Ä–æ—Å–æ–∫ –¥–ª—è ${username}:

${diceEmojis[rolls[0]]} –†–µ–∑—É–ª—å—Ç–∞—Ç: ${rolls[0]}

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üéØ –í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤: ${chat.users.get(userId).totalRolls}
‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${chat.users.get(userId).averageScore}
üèÜ –õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${chat.users.get(userId).bestRoll}
üìâ –•—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${chat.users.get(userId).worstRoll}
    `;

    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫—Ä—É—á–µ–Ω–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    try {
        await bot.deleteMessage(chatId, spinMessage.message_id);
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }

    bot.sendMessage(chatId, resultMessage);
});



// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /daily (–æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è)
bot.onText(/\/daily/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || msg.from.first_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–≥—Ä–æ–∫';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    const chat = getChatStats(chatId);
    if (!chat.users.has(userId)) {
        chat.users.set(userId, {
            username: username,
            totalRolls: 0,
            totalScore: 0,
            averageScore: 0,
            bestRoll: 0,
            worstRoll: 6,
            rollsHistory: [],
            firstRoll: null,
            lastRoll: null,
            dailyRolls: 0,
            lastRollDate: null
        });
    }

    const limitCheck = checkDailyLimit(chatId, userId);
    const remaining = limitCheck.remaining;

    let message = `üìÖ **–î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –¥–ª—è ${username}:**\n\n`;

    if (remaining > 0) {
        message += `‚úÖ –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: **${remaining}**\n`;
        message += `üé≤ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è: **${3 - remaining}**\n`;
        message += `üîÑ –°–±—Ä–æ—Å –ª–∏–º–∏—Ç–∞: **–∑–∞–≤—Ç—Ä–∞ –≤ 00:00**`;
    } else {
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        tomorrow.setHours(0, 0, 0, 0);

        const timeUntilTomorrow = tomorrow - new Date();
        const hours = Math.floor(timeUntilTomorrow / (1000 * 60 * 60));
        const minutes = Math.floor((timeUntilTomorrow % (1000 * 60 * 60)) / (1000 * 60));

        message += `‚ùå –õ–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω!\n`;
        message += `üïê –°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞: **–∑–∞–≤—Ç—Ä–∞ –≤ 00:00**\n`;
        message += `‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: **${hours}—á ${minutes}–º**`;
    }

    bot.sendMessage(chatId, message);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ —á–∞—Ç–µ)
bot.onText(/\/stats/, (msg) => {
    const chatId = msg.chat.id;
    const chat = getChatStats(chatId);

    if (chat.users.size === 0) {
        bot.sendMessage(chatId, '‚ùå –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –°—ã–≥—Ä–∞–π—Ç–µ —Ö–æ—Ç—è –±—ã —Ä–∞–∑!');
        return;
    }

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –æ–±—â–µ–º—É —Å—á–µ—Ç—É (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
    const sortedPlayers = Array.from(chat.users.values())
        .sort((a, b) => b.totalScore - a.totalScore);

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    let statsMessage = `üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤ –≤ —á–∞—Ç–µ:**\n\n`;

    // –ü—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Å –æ—á–∫–∞–º–∏ –∏ –º–µ—Å—Ç–∞–º–∏ –≤ —Ç–æ–ø–µ
    sortedPlayers.forEach((player, index) => {
        const place = index + 1;
        statsMessage += `${place}-–µ –º–µ—Å—Ç–æ: **${player.username}** - ${player.totalScore} –æ—á–∫–æ–≤\n`;
    });

    bot.sendMessage(chatId, statsMessage);
});



// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /commands (–ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã)
bot.onText(/\/commands/, (msg) => {
    const chatId = msg.chat.id;

    const commandsMessage = `üéØ **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n\n`;
    commandsMessage += `üé≤ **–ò–≥—Ä–∞:**\n`;
    commandsMessage += `/dice - –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ (1-6)\n`;
    commandsMessage += `/roll - –ë—ã—Å—Ç—Ä—ã–π –±—Ä–æ—Å–æ–∫\n`;
    commandsMessage += `/daily - –û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n\n`;
    commandsMessage += `üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**\n`;
    commandsMessage += `/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ —á–∞—Ç–µ\n\n`;
    commandsMessage += `‚ÑπÔ∏è **–°–ø—Ä–∞–≤–∫–∞:**\n`;
    commandsMessage += `/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n`;
    commandsMessage += `/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n`;
    commandsMessage += `/commands - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã`;

    bot.sendMessage(chatId, commandsMessage);
});



// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
    const chatId = msg.chat.id;

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    if (msg.text && msg.text.startsWith('/')) {
        return;
    }

    // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (msg.text) {
        const responses = [
            'üé≤ –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /dice –¥–ª—è –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞!',
            'üéØ –ì–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ! –ö–æ–º–∞–Ω–¥–∞ /dice –¥–ª—è –±—Ä–æ—Å–∫–∞ –∫—É–±–∏–∫–∞.',
            'üé≤ –î–∞–≤–∞–π—Ç–µ —Å—ã–≥—Ä–∞–µ–º! /dice - –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞, /roll - –±—ã—Å—Ç—Ä—ã–π –±—Ä–æ—Å–æ–∫.',
            'üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stats —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤!',
            'üéØ /help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º –∏–≥—Ä—ã.',
            'üé™ –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–µ–ª–∞—é—Ç –∏–≥—Ä—É –±–æ–ª–µ–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–π!'
        ];

        const randomResponse = responses[Math.floor(Math.random() * responses.length)];
        bot.sendMessage(chatId, randomResponse);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});

bot.on('error', (error) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
process.on('SIGINT', () => {
    console.log('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –¥–ª—è –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ...');
    bot.stopPolling();
    process.exit(0);
});

console.log('üé≤ Telegram –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ –∑–∞–ø—É—â–µ–Ω!');
console.log('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.');
console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –∞–∫—Ç–∏–≤–Ω–∞');
console.log('üé™ –ê–Ω–∏–º–∞—Ü–∏–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã –∫—Ä—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã');
console.log('üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /dice, /roll, /daily, /stats, /commands');
